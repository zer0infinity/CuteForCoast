#-----------------------------------------------------------------------------------------------------
# Copyright (c) 2009, Peter Sommerlad and IFS Institute for Software at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or modify it under the terms of
# the license that is included with this library/application in the file license.txt.
#-----------------------------------------------------------------------------------------------------
{
	/DLL {
		CoastAppLog
		CoastDataAccess
		CoastRenderers
		CoastOracle
	}
	/Modules {
		ActionsModule
		RenderersModule
		DataAccessImplsModule
		MappersModule
		AppLogModule
		ServersModule
		OracleModule
	}

	/Servers {}
	# uncomment the server slot for enabling TimeLogging
	/Server	Server

	/Actions {
		/CallDataAccessAction	{ CallDA }
	}
	/Renderers {
		/SwitchRenderer 		{ Switch }
		/ContextLookupRenderer 	{ Lookup }
	}
	/OracleModule {
		/ConnectionPool {
			/ParallelQueries		20
			/CloseConnectionTimeout	2
		}
	}

	/DataAccessImpls {
		/OracleDAImpl {
			/SifsCoastOrcl {
				MultiThreadedDA
				MultiThreadedDAWithError
				SPExecuteGetempsSucc
				SPExecuteGetempsFail
			}
		}
	}

	/Mappers {
		/Input {
			/OracleParameterMapper {
				/SifsCoastOrclSP {
					MultiThreadedDA
					MultiThreadedDAWithError
					SPExecuteGetempsSucc
					SPExecuteGetempsFail
				}
			}
		}
		/Output {
			/ResultMapper {
				AppendResultMapper
				/PutResultMapper {
				}
			}
			/OracleResultMapper {
				/OracleDAImpl {
					MultiThreadedDA
					MultiThreadedDAWithError
					/SPExecute {
						SPExecuteGetempsSucc
						SPExecuteGetempsFail
					}
				}
			}
		}
	}

######## Test specific section ########

	/DAImplTest {
		{
			/ThreadPoolSize					20
			/PoolStorageSize				2000
			/NumOfPoolBucketSizes			20
			/SuccessDA						MultiThreadedDA
			/FailureDA						MultiThreadedDAWithError
			/ThreadDALoops					100
			/Result {
				/MultiThreadedDA {
					/QueryCount ignore
					/QueryResult ignore
				}
			}
		}
		{
			/ThreadPoolSize					20
			/PoolStorageSize				2000
			/NumOfPoolBucketSizes			20
			/SuccessDA						SPExecuteGetempsSucc
			/FailureDA						SPExecuteGetempsFail
			/ThreadDALoops					200
			# force connection closing to see if handle memory gets freed
			/ThreadLoopWait					0
			/Result {
				/SPExecuteGetempsSucc {
					/EMPCURSOR {
						/QueryResult ignore
						/QueryCount	ignore
					}
				}
			}
		}
		{
			/ThreadPoolSize					2
			/PoolStorageSize				2000
			/NumOfPoolBucketSizes			20
			/SuccessDA						SPExecuteGetempsSucc
			/FailureDA						SPExecuteGetempsFail
			/ThreadDALoops					2
			# force connection closing to see if handle memory gets freed
			/ThreadLoopWait					5
			/Result {
				/SPExecuteGetempsSucc {
					/EMPCURSOR {
						/QueryResult ignore
						/QueryCount	ignore
					}
				}
			}
		}
	}
}
