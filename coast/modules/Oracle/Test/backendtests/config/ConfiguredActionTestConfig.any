#-----------------------------------------------------------------------------------------------------
# Copyright (c) 2009, Peter Sommerlad and IFS Institute for Software at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or modify it under the terms of
# the license that is included with this library/application in the file license.txt.
#-----------------------------------------------------------------------------------------------------
{
	/DLL {
		CoastAppLog
		CoastDataAccess
		CoastRenderers
		CoastOracle
	}
	/Modules {
		ActionsModule
		RenderersModule
		DataAccessImplsModule
		MappersModule
		AppLogModule
		ServersModule
		OracleModule
	}

	/Servers {}
	# uncomment the server slot for enabling TimeLogging
	/Server	Server

	/Actions {
		/CallDataAccessAction	{ CallDA }
	}
	/Renderers {
		/SwitchRenderer 		{ Switch }
		/ContextLookupRenderer 	{ Lookup }
	}
	/OracleModule {
		/ConnectionPool {
			/ParallelQueries		4
			/CloseConnectionTimeout	20
		}
	}

	/DataAccessImpls {
		/OracleDAImpl {
			IncompleteParamsDA
			/SifsCoastOrcl {
				SelectEmployees
				SelectEmployeesTitlesOnce
				SPMaxSalary
				/SPExecute {
					SPExecuteArray
				}
				LoadOratestSchema
				UpdateEmployees
				SimpleSQLAccess
			}
		}
	}

	/Mappers {
		/Input {
			/ParameterMapper {
				/SifsCoastOrcl {
					/SelectEmployees {
						SelectEmployeesTitlesOnce
						UpdateEmployees
						SimpleSQLAccess
					}
					LoadOratestSchema
				}
			}
			/OracleParameterMapper {
				IncompleteParamsDA
				/SifsCoastOrclSP {
					SPMaxSalary
					/SPExecute {
						SPExecuteArray
					}
				}
			}
			/NullParameterMapper {
				MapNullID
			}
		}
		/Output {
			/ResultMapper {
			}
			/OracleResultMapper {
				AppendResultMapper
				/PutResultMapper {
				}
				/OracleDAImpl {
					SelectEmployees
					SelectEmployeesTitlesOnce
					SPMaxSalary
					/SPExecute {
						IncompleteParamsDA
						SPExecuteArray
					}
					LoadOratestSchema
					UpdateEmployees
					SimpleSQLAccess
				}
			}
		}
	}

######## Test specific section ########

	/RunOnly {
	}
	/TestCases {
		/IncompleteParamsTest {
			/TheAction {
				/CallDA 	IncompleteParamsDA
			}
			/ExpectedResult 0
			/Result {
				/TmpStore {
					/SPExecute {
						/QuerySource ""
					}
				}
			}
		}
		/SelectEmployeesTest {
			/TheAction {
				/CallDA 	SelectEmployees
			}
			/Result {
				/TmpStore {
					/SelectEmployees {
						/Query	"SELECT ename, job FROM emp"
						/QueryCount 14
						/QueryResult	{
						  {
						    /ENAME "SMITH"
						    /JOB "CLERK"
						  }
						  {
						    /ENAME "ALLEN"
						    /JOB "SALESMAN"
						  }
						  {
						    /ENAME "WARD"
						    /JOB "SALESMAN"
						  }
						  {
						    /ENAME "JONES"
						    /JOB "MANAGER"
						  }
						  {
						    /ENAME "MARTIN"
						    /JOB "SALESMAN"
						  }
						  {
						    /ENAME "BLAKE"
						    /JOB "MANAGER"
						  }
						  {
						    /ENAME "CLARK"
						    /JOB "MANAGER"
						  }
						  {
						    /ENAME "SCOTT"
						    /JOB "ANALYST"
						  }
						  {
						    /ENAME "KING"
						    /JOB "PRESIDENT"
						  }
						  {
						    /ENAME "TURNER"
						    /JOB "SALESMAN"
						  }
						  {
						    /ENAME "ADAMS"
						    /JOB "CLERK"
						  }
						  {
						    /ENAME "JAMES"
						    /JOB "CLERK"
						  }
						  {
						    /ENAME "FORD"
						    /JOB "ANALYST"
						  }
						  {
						    /ENAME "MILLER"
						    /JOB "CLERK"
						  }
						}
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/SelectEmployeesTitlesOnceTest {
			/TheAction {
				/CallDA 	SelectEmployeesTitlesOnce
			}
			/Result {
				/TmpStore {
					/SelectEmployeesTitlesOnce {
						/Query	"SELECT ename, job FROM emp"
						/QueryCount 14
						/QueryTitles {
							/ENAME	0
							/JOB	1
						}
						/QueryResult	{
						  {
						    "SMITH"
						    "CLERK"
						  }
						  {
						    "ALLEN"
						    "SALESMAN"
						  }
						  {
						    "WARD"
						    "SALESMAN"
						  }
						  {
						    "JONES"
						    "MANAGER"
						  }
						  {
						    "MARTIN"
						    "SALESMAN"
						  }
						  {
						    "BLAKE"
						    "MANAGER"
						  }
						  {
						    "CLARK"
						    "MANAGER"
						  }
						  {
						    "SCOTT"
						    "ANALYST"
						  }
						  {
						    "KING"
						    "PRESIDENT"
						  }
						  {
						    "TURNER"
						    "SALESMAN"
						  }
						  {
						    "ADAMS"
						    "CLERK"
						  }
						  {
						    "JAMES"
						    "CLERK"
						  }
						  {
						    "FORD"
						    "ANALYST"
						  }
						  {
						    "MILLER"
						    "CLERK"
						  }
						}
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/EmpSalaryTest {
			/TheAction {
				/CallDA 	SPMaxSalary
			}
			/Result {
				/TmpStore {
					/SPMaxSalary {
						/Query	"BEGIN getempsalary(:ID,:SALARY); END;"
						/ID			7839
						/SALARY		5000
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/EmpSalary2Test {
			/TheAction {
				/CallDA 	SPMaxSalary
			}
			/Result {
				/TmpStore {
					/SPMaxSalary {
						/Query	"BEGIN getempsalary(:ID,:SALARY); END;"
						/ID			7839
						/SALARY		5000
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/EmpSalaryAnyNULLTest {
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
					/Parameters {
						/SPName	getempsalary
						/ID		*
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN getempsalary(:ID,:SALARY); END;"
						/ID		*
						/SALARY		0
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/EmpSalaryNULLStringTest {
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
					/Parameters {
						/SPName	getempsalary
						/ID		"NULL"
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN getempsalary(:ID,:SALARY); END;"
						/ID		*
						/SALARY		0
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/EmpSalarynullStringTest {
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
					/Parameters {
						/SPName	getempsalary
						/ID		"null"
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN getempsalary(:ID,:SALARY); END;"
						/ID		*
						/SALARY		0
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/EmpSalaryNULLAsEmptyStringTest {
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
					/Parameters {
						/SPName	getempsalary
						/ID		""
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN getempsalary(:ID,:SALARY); END;"
						/ID		*
						/SALARY		0
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/EmpSalaryNotANULLValueTest {
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
					/Parameters {
						/SPName	getempsalary
						/ID		"0"
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN getempsalary(:ID,:SALARY); END;"
						/ID		0
						/SALARY		""
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/EmpSalaryForceExceptionTest {
			/TmpStore {
				/ArrayValues {
					{
						/ID		7839
					}
					{
						/ID		99
					}
					{
						/ID		7839
					}
				}
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
					/Parameters {
						/SPName	getempsalary
						/ArrayValuesSlotName	ArrayValues
					}
				}
			}
			/ExpectedResult	0
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN getempsalary(:ID,:SALARY); END;"
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
						/Messages ignore
					}
				}
			}
		}
		/GetFloatTest {
			/TmpStore {
				/SPName	getfloat
			}
			/TheAction {
				/CallDA 	SPExecute
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN getfloat(:RESULT); END;"
						/RESULT		3.14
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/SelectFloatTest {
			/TheAction {
				/CallDA {
					/DataAccess SimpleSQLAccess
					/Parameters {
						/SQL	"select STOR_ID,ORD_NUM,DISCOUNT from SALESDETAIL where STOR_ID=7131 and ORD_NUM='Fsoap867'"
					}
				}
			}
			/Result {
				/TmpStore {
					/SimpleSQLAccess {
						/Query "select STOR_ID,ORD_NUM,DISCOUNT from SALESDETAIL where STOR_ID=7131 and ORD_NUM='Fsoap867'"
						/QueryResult {
						      {
						        /STOR_ID "7131"
						        /ORD_NUM "Fsoap867"
						        /DISCOUNT "46.7"
						      }
						      {
						        /STOR_ID "7131"
						        /ORD_NUM "Fsoap867"
						        /DISCOUNT "46.7"
						      }
						      {
						        /STOR_ID "7131"
						        /ORD_NUM "Fsoap867"
						        /DISCOUNT "46.7"
						      }
						}
						/QueryCount 3
					}
				}
			}
		}
		/GetStringTest {
			/TmpStore {
				/SPName	getstring
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
					/Parameters {
						/LOOPCOUNT	5
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN getstring(:LOOPCOUNT,:RESULT); END;"
						/RESULT		"aaaaa"
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/GetStringTooShortTest {
			/UseConfig	GetStringTest
			/Replace {
				/TmpStore.StringBufferSize	4
				/Result.TmpStore.SPExecute {
					/Query	"BEGIN getstring(:LOOPCOUNT,:RESULT); END;"
					/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					/Messages {
						"OracleDAImpl::TryExecuteQuery: Error - ORA-06502: PL/SQL: numeric or value error: character string buffer too small\nORA-06512: at \"ORATEST.GETSTRING\", line 6\nORA-06512: at line 1\n"
					}
				}
				/ExpectedResult	0
			}
		}
		/GetStringDefaultMaxSizeTest {
			/UseConfig	GetStringTest
			/Replace {
				/TheAction.CallDA.Parameters.LOOPCOUNT	4096
				/Result.TmpStore.SPExecute.RESULT ignore
			}
		}
		/GetStringAboveMaxSizeTest {
			/UseConfig	GetStringTest
			/Replace {
				/TheAction.CallDA.Parameters.LOOPCOUNT	4097
				/Result.TmpStore.SPExecute {
					/Query	"BEGIN getstring(:LOOPCOUNT,:RESULT); END;"
					/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					/Messages {
						"OracleDAImpl::TryExecuteQuery: Error - ORA-06502: PL/SQL: numeric or value error: character string buffer too small\nORA-06512: at \"ORATEST.GETSTRING\", line 6\nORA-06512: at line 1\n"
					}
				}
				/ExpectedResult	0
			}
		}
		/FunctionTest {
			/TmpStore {
				/SPName	getmaxsalary
			}
			/TheAction {
				/CallDA 	SPExecute
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN :getmaxsalary := getmaxsalary(); END;"
						/getmaxsalary	5000
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/FunctionTestOverriddenReturn {
			/UseConfig	FunctionTest
			/Replace {
				/TmpStore.Return	"MyReturn"
				/Result.TmpStore.SPExecute {
					/Query	"BEGIN :MyReturn := getmaxsalary(); END;"
					/MyReturn	5000
					/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
				}
			}
		}
		/FunctionTestResultset {
			/TmpStore {
				/SPName	getempsfunc
			}
			/TheAction {
				/CallDA 	SPExecute
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN :getempsfunc := getempsfunc(); END;"
						/getempsfunc {
							/QueryResult {
							    {
							      /ENAME "ADAMS"
							    }
							    {
							      /ENAME "ALLEN"
							    }
							    {
							      /ENAME "BLAKE"
							    }
							    {
							      /ENAME "CLARK"
							    }
							    {
							      /ENAME "FORD"
							    }
							    {
							      /ENAME "JAMES"
							    }
							    {
							      /ENAME "JONES"
							    }
							    {
							      /ENAME "KING"
							    }
							    {
							      /ENAME "MARTIN"
							    }
							    {
							      /ENAME "MILLER"
							    }
							    {
							      /ENAME "SCOTT"
							    }
							    {
							      /ENAME "SMITH"
							    }
							    {
							      /ENAME "TURNER"
							    }
							    {
							      /ENAME "WARD"
							    }
							}
							/QueryCount 14
						}
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/NonExistingProcedureOrFunctionTest {
			/UseConfig	FunctionTest
			/Replace {
				/TmpStore.SPName	"spNotExisting"
				/Result.TmpStore.SPExecute {
					/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
				}
				/ExpectedResult	0
			}
		}
		/ProcedureResultSetTest {
			/TmpStore {
				/SPName	getemps
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
				}
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN getemps(:EMPCURSOR); END;"
						/EMPCURSOR {
							/QueryResult {
								{
								  /ENAME "ADAMS"
								}
								{
								  /ENAME "ALLEN"
								}
								{
								  /ENAME "BLAKE"
								}
								{
								  /ENAME "CLARK"
								}
								{
								  /ENAME "FORD"
								}
								{
								  /ENAME "JAMES"
								}
								{
								  /ENAME "JONES"
								}
								{
								  /ENAME "KING"
								}
								{
								  /ENAME "MARTIN"
								}
								{
								  /ENAME "MILLER"
								}
								{
								  /ENAME "SCOTT"
								}
								{
								  /ENAME "SMITH"
								}
								{
								  /ENAME "TURNER"
								}
								{
								  /ENAME "WARD"
								}
							}
							/QueryCount		14
						}
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/ProcedureResultSetTitlesOnceTest {
			/TmpStore {
				/SPName	getemps
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
					/Parameters {
						/DBResultFormat		TitlesOnce
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecute {
						/Query	"BEGIN getemps(:EMPCURSOR); END;"
						/EMPCURSOR {
							/QueryTitles {
							  /ENAME 0
							}
							/QueryResult {
								{
								  "ADAMS"
								}
								{
								  "ALLEN"
								}
								{
								  "BLAKE"
								}
								{
								  "CLARK"
								}
								{
								  "FORD"
								}
								{
								  "JAMES"
								}
								{
								  "JONES"
								}
								{
								  "KING"
								}
								{
								  "MARTIN"
								}
								{
								  "MILLER"
								}
								{
								  "SCOTT"
								}
								{
								  "SMITH"
								}
								{
								  "TURNER"
								}
								{
								  "WARD"
								}
							}
							/QueryCount		14
						}
						/QuerySource	 !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
					}
				}
			}
		}
		/SelectEmployeesNoDataTest {
			/TheAction {
				/CallDA {
					/DataAccess	SelectEmployees
					/Parameters {
						/whereClause " where ename='JuppiDuppi'"
					}
				}
			}
			/Result {
				/TmpStore {
					/SelectEmployees {
						/Query	"SELECT ename, job FROM emp where ename='JuppiDuppi'"
						/QueryCount 0
					}
				}
			}
		}
		/insertEmployeesTest {
			/TheAction {
				/CallDA {
					/DataAccess SimpleSQLAccess
					/Parameters {
						/SQL	"insert into DEPT (deptno, dname, loc) values (47,'IFS','Rappi')"
					}
				}
			}
			/Result {
				/TmpStore {
					/SimpleSQLAccess {
						/Query	"insert into DEPT (deptno, dname, loc) values (47,'IFS','Rappi')"
						/UpdateCount 1
					}
				}
			}
		}
		/createTableTest {
			/TheAction {
				/CallDA {
					/DataAccess SimpleSQLAccess
					/Parameters {
						/SQL	"CREATE TABLE IFS ( NAME VARCHAR2(10), JOB VARCHAR2(9), SAL NUMBER )"
					}
				}
			}
			/Result {
				/TmpStore {
					/SimpleSQLAccess {
						/Query	"CREATE TABLE IFS ( NAME VARCHAR2(10), JOB VARCHAR2(9), SAL NUMBER )"
						/UpdateCount 0
					}
				}
			}
		}
		/alterTableTest {
			/TheAction {
				/CallDA {
					/DataAccess SimpleSQLAccess
					/Parameters {
						/SQL	"ALTER TABLE IFS ADD CONSTRAINT PK_IFS PRIMARY KEY (NAME) ENABLE"
					}
				}
			}
			/Result {
				/TmpStore {
					/SimpleSQLAccess {
						/Query	"ALTER TABLE IFS ADD CONSTRAINT PK_IFS PRIMARY KEY (NAME) ENABLE"
						/UpdateCount 0
					}
				}
			}
		}
		/insertIfsDataTest {
			/TheAction {
				/CallDA {
					/DataAccess SimpleSQLAccess
					/Parameters {
						/SQL	"insert into IFS (name, job, sal) values ('Marcel','Engineer',1234)"
					}
				}
			}
			/Result {
				/TmpStore {
					/SimpleSQLAccess {
						/Query	"insert into IFS (name, job, sal) values ('Marcel','Engineer',1234)"
						/UpdateCount 1
					}
				}
			}
		}
		/insertIfsDataTest2 {
			/TheAction {
				/CallDA {
					/DataAccess SimpleSQLAccess
					/Parameters {
						/SQL	"insert into IFS (name, job, sal) values ('Dominik','Engineer',4567)"
					}
				}
			}
			/Result {
				/TmpStore {
					/SimpleSQLAccess {
						/Query	"insert into IFS (name, job, sal) values ('Dominik','Engineer',4567)"
						/UpdateCount 1
					}
				}
			}
		}
		/delettIfsDataTest {
			/TheAction {
				/CallDA {
					/DataAccess SimpleSQLAccess
					/Parameters {
						/SQL	"delete from IFS where job='Engineer'"
					}
				}
			}
			/Result {
				/TmpStore {
					/SimpleSQLAccess {
						/Query	"delete from IFS where job='Engineer'"
						/UpdateCount 2
					}
				}
			}
		}
		/dropUnknownTableTest {
			/TheAction {
				/CallDA {
					/DataAccess SimpleSQLAccess
					/Parameters {
						/SQL	"DROP TABLE GUGUSELI cascade constraints"
					}
				}
			}
			/ExpectedResult 0
			/Result {
				/TmpStore {
					/SimpleSQLAccess {
						/Query	"DROP TABLE GUGUSELI cascade constraints"
						/Messages {
							"OracleDAImpl::TryExecuteQuery: Error - ORA-00942: table or view does not exist\n"
						}
					}
				}
			}
		}
		/dropTableTest {
			/TheAction {
				/CallDA {
					/DataAccess SimpleSQLAccess
					/Parameters {
						/SQL	"DROP TABLE IFS cascade constraints"
					}
				}
			}
			/Result {
				/TmpStore {
					/SimpleSQLAccess {
						/Query	"DROP TABLE IFS cascade constraints"
						/UpdateCount 0
					}
				}
			}
		}
		/GetEmpNames {
			/TmpStore {
				/SPName	GETEMPNAME
				/ArrayValues {
					{
						/ID	7839
					}
					{
						/ID	7902
					}
				}
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecuteArray
					/Parameters {
						/ArrayValuesSlotName	ArrayValues
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecuteArray {
						/QuerySource  !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
						/Query "BEGIN GETEMPNAME(:ID,:NAME); END;"
						/ArrayResults {
							{
								/ID		7839
								/NAME	KING
							}
							{
								/ID		7902
								/NAME	FORD
							}
						}
					}
				}
			}
		}
		/GetEmpNamesSingleArrayValue {
			/TmpStore {
				/SPName	GETEMPNAME
				/ArrayValues {
					{
						/ID	7839
					}
				}
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecuteArray
					/Parameters {
						/ArrayValuesSlotName	ArrayValues
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecuteArray {
						/QuerySource  !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
						/Query "BEGIN GETEMPNAME(:ID,:NAME); END;"
						/ArrayResults {
							{
								/ID		7839
								/NAME	KING
							}
						}
					}
				}
			}
		}
		/GetEmpNamesEmptyArrayValue {
			/TmpStore {
				/SPName	GETEMPNAME
				/ArrayValues {
				}
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecuteArray
					/Parameters {
						/ArrayValuesSlotName	ArrayValues
					}
				}
			}
			/ExpectedResult 0
			/Result {
				/TmpStore {
					/SPExecuteArray {
						/QuerySource  !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
						/ProcedureName "GETEMPNAME"
						/Query "BEGIN GETEMPNAME(:ID,:NAME); END;"
					}
				}
			}
		}
		/GETEMPSOFDEPTTest {
			/TmpStore {
				/SPName	GETEMPSOFDEPT
				/ArrayValues {
					{
						/DEPTNAME	OPERATIONS
					}
					{
						/DEPTNAME	RESEARCH
					}
					{
						/DEPTNAME	SALES
					}
				}
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecuteArray
					/Parameters {
						/ArrayValuesSlotName	ArrayValues
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecuteArray {
						/QuerySource  !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
						/Query "BEGIN GETEMPSOFDEPT(:DEPTNAME,:EMPCURSOR); END;"
						/ArrayResults {
							{
								/DEPTNAME OPERATIONS
								/EMPCURSOR {
									/QueryCount	0
								}
							}
							{
								/DEPTNAME RESEARCH
								/EMPCURSOR {
									/QueryResult {
								        {
										  /ENAME "ADAMS"
										}
										{
										  /ENAME "FORD"
										}
										{
										  /ENAME "JONES"
										}
										{
										  /ENAME "SCOTT"
										}
										{
										  /ENAME "SMITH"
										}
									}
									/QueryCount	5
								}
							}
							{
								/DEPTNAME SALES
								/EMPCURSOR {
									/QueryResult {
										{
										  /ENAME "ALLEN"
										}
										{
										  /ENAME "BLAKE"
										}
										{
										  /ENAME "JAMES"
										}
										{
										  /ENAME "MARTIN"
										}
										{
										  /ENAME "TURNER"
										}
										{
										  /ENAME "WARD"
										}
									}
									/QueryCount	6
								}
							}
						}
					}
				}
			}
		}
		/GETEMPSOFDEPTTitlesOnceTest {
			/TmpStore {
				/SPName	GETEMPSOFDEPT
				/ArrayValues {
					{
						/DEPTNAME	OPERATIONS
					}
					{
						/DEPTNAME	RESEARCH
					}
					{
						/DEPTNAME	SALES
					}
				}
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecuteArray
					/Parameters {
						/ArrayValuesSlotName	ArrayValues
						/DBResultFormat		TitlesOnce
					}
				}
			}
			/Result {
				/TmpStore {
					/SPExecuteArray {
						/QuerySource  !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
						/Query "BEGIN GETEMPSOFDEPT(:DEPTNAME,:EMPCURSOR); END;"
						/ArrayResults {
							{
								/DEPTNAME OPERATIONS
								/EMPCURSOR {
									/QueryTitles {
										/ENAME 0
									}
									/QueryCount	0
								}
							}
							{
								/DEPTNAME RESEARCH
								/EMPCURSOR {
									/QueryTitles {
										/ENAME 0
									}
									/QueryResult {
								        {
										  "ADAMS"
										}
										{
										  "FORD"
										}
										{
										  "JONES"
										}
										{
										  "SCOTT"
										}
										{
										  "SMITH"
										}
									}
									/QueryCount	5
								}
							}
							{
								/DEPTNAME SALES
								/EMPCURSOR {
									/QueryTitles {
										/ENAME 0
									}
									/QueryResult {
										{
										  "ALLEN"
										}
										{
										  "BLAKE"
										}
										{
										  "JAMES"
										}
										{
										  "MARTIN"
										}
										{
										  "TURNER"
										}
										{
										  "WARD"
										}
									}
									/QueryCount	6
								}
							}
						}
					}
				}
			}
		}
		/UpdateEmployeesTest {
			/TheAction {
				/CallDA 	UpdateEmployees
			}
			/Result {
				/TmpStore {
					/UpdateEmployees {
						/Query	"update emp set ename='gugus' where ename='ADAMS' or ename='BLAKE'"
						/UpdateCount 2
					}
				}
			}
		}
		/TestWriteUser {
			/TmpStore {
				/SPName	getlistingid
				/DBUser	!Defaults.any?Oracle.Username2
				/DBPW	!Defaults.any?Oracle.Password2
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
					/Parameters {
						/Return	LISTINGID
						/IMARKETCODE	10
						/ICURRENCYCODE	1
						/IVALORNUMBER	1111
					}
				}
			}
			/Result {
				/TmpStore {
					/SPName "getlistingid"
					/SPExecute {
						/QuerySource !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
						/ProcedureName "getlistingid"
						/Query "BEGIN :LISTINGID := getlistingid(:IMARKETCODE,:ICURRENCYCODE,:IVALORNUMBER); END;"
						/LISTINGID "151515"
						/IMARKETCODE "10"
						/ICURRENCYCODE "1"
						/IVALORNUMBER "1111"
					}
				}
			}
		}
		/TestDefaultUser {
			/TmpStore {
				/SPName	getlistingid
			}
			/TheAction {
				/CallDA {
					/DataAccess	SPExecute
					/Parameters {
						/Return	LISTINGID
						/IMARKETCODE	10
						/ICURRENCYCODE	1
						/IVALORNUMBER	1111
					}
				}
			}
			/Result {
				/TmpStore {
					/SPName "getlistingid"
					/SPExecute {
						/QuerySource !InputMapperMeta.any?SifsCoastOrcl.DBConnectString
						/ProcedureName "getlistingid"
						/Query "BEGIN :LISTINGID := getlistingid(:IMARKETCODE,:ICURRENCYCODE,:IVALORNUMBER); END;"
						/LISTINGID "151515"
						/IMARKETCODE "10"
						/ICURRENCYCODE "1"
						/IVALORNUMBER "1111"
					}
				}
			}
		}
	}
}
