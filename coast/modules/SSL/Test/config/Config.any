#-----------------------------------------------------------------------------------------------------
# Copyright (c) 2005, Peter Sommerlad and IFS Institute for Software at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or modify it under the terms of
# the license that is included with this library/application in the file license.txt.
#-----------------------------------------------------------------------------------------------------
{
	# -- Config for Acceptor Factories  in  ListenerPoolTest
	# These are the SLLServerSocket test cases.
	/TCP5010 {
		/Port	5010
		/KeyFileServer	!Defaults.any?KeyFileClientRelative
		/CertFileServer	!Defaults.any?CertFileClientRelative
	}
	# Expecting send/recieve to fail
	/TCP5011 {
		/Port	5011
	}
	# Check peer cert, this test should be ok.
	# Expecting send/recieve to be ok
	/TCP5012 {
		/Port	5012
		/KeyFileServer	!Defaults.any?KeyFileServerRelative
		/CertFileServer	!Defaults.any?ServerChainCertRelative
		/SSLPeerCAFile !Defaults.any?FullChainCertRelative
		/SSLVerifyDepth 2
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
	}
	# Expecting send/recieve to be ok
	/TCP5013 {
		/Port	5013
		/KeyFileServer	!Defaults.any?KeyFileServerRelative
		/CertFileServer	!Defaults.any?ServerChainCertRelative
		/SSLPeerCAFile !Defaults.any?FullChainCertRelative
		/SSLVerifyDepth 2
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
		/VerifyCertifiedEntity 1
		/CertVerifyStringIsFilter 0
		/CertVerifyString		!Defaults.any?CertFileClientSubject
	}
	# Expecting send/recieve to be ok
	/TCP5014 {
		/Port	5014
		/KeyFileServer	!Defaults.any?KeyFileServerRelative
		/CertFileServer	!Defaults.any?ServerChainCertRelative
		/SSLPeerCAFile !Defaults.any?FullChainCertRelative
		/SSLVerifyDepth 2
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
		/VerifyCertifiedEntity 1
		/CertVerifyStringIsFilter 1
		/CertVerifyString		!Defaults.any?CertFileClientSubject
	}
	# chain depth too "short"
	# Expecting send/recieve to fail
	/TCP5015 {
		/Port	5015
		/KeyFileServer	!Defaults.any?KeyFileServerRelative
		/CertFileServer	!Defaults.any?ServerChainCertRelative
		/SSLPeerCAFile !Defaults.any?FullChainCertRelative
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
	}
	# Do not check peer cert
	# Expecting send/recieve to be ok
	/TCP5016 {
		/Port	5016
		/KeyFileServer	!Defaults.any?KeyFileServerRelative
		/CertFileServer	!Defaults.any?ServerChainCertRelative
		/SSLPeerCAFile !Defaults.any?FullChainCertRelative
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 0
		/SSLVerifyFailIfNoPeerCert 0
	}
	# Do not check peer cert, leave stream open
	# Expecting send/recieve to be ok
	/TCP5017 {
		/Port	5017
		/KeyFileServer	!Defaults.any?KeyFileServerRelative
		/CertFileServer	!Defaults.any?ServerChainCertRelative
		/SSLPeerCAFile !Defaults.any?FullChainCertRelative
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 0
		/SSLVerifyFailIfNoPeerCert 1
	}
	# Do check peer cert, no peer cert there and close stream
	# Expecting send/recieve to fail
	/TCP5018 {
		/Port	5018
		/KeyFileServer	!Defaults.any?KeyFileServerRelative
		/CertFileServer	!Defaults.any?ServerChainCertRelative
		/SSLPeerCAFile !Defaults.any?FullChainCertRelative
		/SSLVerifyDepth 10
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
	}
	# Expecting send/recieve to fail because of SSLVerifyDepth
	/TCP5019 {
		/Port	5019
		/KeyFileServer	!Defaults.any?KeyFileServerRelative
		/CertFileServer	!Defaults.any?ServerChainCertRelative
		/SSLPeerCAFile !Defaults.any?FullChainCertRelative
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 0
		/VerifyCertifiedEntity 1
		/CertVerifyStringIsFilter 0
		/CertVerifyString		!Defaults.any?CertFileClientSubject
	}
	# Expecting send/recieve to be ok
	/TCP5020 {
		/Port	5020
		/KeyFileServer	!Defaults.any?RootCAKeyFileRelative
		/CertFileServer	!Defaults.any?RootCACertFileRelative
		/SSLPeerCAFile !Defaults.any?RootCACertFileRelative
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 1
		/SSLVerifyFailIfNoPeerCert 1
		/VerifyCertifiedEntity 1
		/CertVerifyStringIsFilter 0
		/CertVerifyString		!Defaults.any?RootCACertFileSubject
	}
	/TCP5021 {
		/Port	5021
		/KeyFileServer	!Defaults.any?RootCAKeyFileRelative
		/CertFileServer	!Defaults.any?RootCACertFileRelative
		/SSLPeerCAFile !Defaults.any?RootCACertFileRelative
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 0
		/SSLVerifyFailIfNoPeerCert 1
		/ServerCipherList "HIGH:-SSLv2:+SSLv3"
		/ServerRSALength 2048
		/ServerDHLength 1024
	}
	/TCP5022 {
		/Port	5022
		/KeyFileServer	!Defaults.any?RootCAKeyFileRelative
		/CertFileServer	!Defaults.any?RootCACertFileRelative
		/SSLPeerCAFile !Defaults.any?RootCACertFileRelative
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 0
		/SSLVerifyFailIfNoPeerCert 1
		/ServerCipherList "HIGH:-SSLv2:+SSLv3"
		/ServerRSALength 2048
		/ServerDHLength 1024
	}
	/TCP5023 {
		/Port	5023
		/KeyFileServer	!Defaults.any?RootCAKeyFileRelative
		/CertFileServer	!Defaults.any?RootCACertFileRelative
		/SSLPeerCAFile !Defaults.any?RootCACertFileRelative
		/SSLVerifyDepth 1
		/SSLVerifyPeerCert 0
		/SSLVerifyFailIfNoPeerCert 1
		/ServerCipherList "HIGH:+SSLv2:-SSLv3"
		/ServerRSALength 2048
		/ServerDHLength 1024
	}
}
