#-----------------------------------------------------------------------------------------------------
# Copyright (c) 2005, Peter Sommerlad and IFS Institute for Software at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or modify it under the terms of
# the license that is included with this library/application in the file license.txt.
#-----------------------------------------------------------------------------------------------------
{
	/DLL {
		CoastAppLog
		CoastRenderers
		CoastFunctionalActions
	}
	/Modules {
		ActionsModule
		RenderersModule
		TimeLoggingModule
		AppLogModule
	}

	/Actions {
		/LoopAction 	{ Loop }
		/ListAction 	{ List }
		/RemoveAction	{ Remove }
		/RendererDispatchAction { RDispatch }
		/ConditionalAction		{ Condition }
		/NotEmptyCheckAction	{ CheckNotEmpty }
		/EmailAddressCheckAction { CheckEmailAddress }
		/CopyContextAction	{ Copy }
	}
	/Renderers {
		/SwitchRenderer 		{ Switch }
		/ContextLookupRenderer 	{ Lookup }
	}

	/TimeLoggingModule {
		/DoTiming	1
		/DoLogging	1
	}
	/AppLogModule {
		/LogDir		"."
		/RotateDir	"."
		/RotateTime	"23:59"
		/Servers {
			/Server {
				/TimerLog {
					/FileName	"MethodTimer.log"
					/Format		%MethodTimerLog.Format
					/Header		%MethodTimerLog.Header
				}
			}
		}
	}

 	/MethodTimerLog {
		/Header "# TimeStamp [Class.Method] [Msg]-> <Time>[Unit]"
		/Format {
			" ["
			{ /Lookup TimeLogEntry.Key }
			"] "
			{ /StringCompareRenderer {
				/String1	{ /Lookup TimeLogEntry.Msg }
				/String2	""
				/Unequal {
					"["
					{ /Lookup TimeLogEntry.Msg }
					"] "
				}
			} }
			"-> "
			{ /Lookup TimeLogEntry.Time }
			{ /Lookup TimeLogEntry.Unit }
		}
	}
#--- time logging configuration ---
	# configure where to log, acts as config for TimeLoggingAction
	/TimeLoggingAction {
		{ /TimeLoggingAction	{
			/Channel		TimerLog
			/TimeEntries	Method
		} }
#		{ /TimeLoggingAction	{
#			/Channel		TimerLog
#			/TimeEntries	DataAccess
#		} }
	}
	# specify which entries to log
	/EnabledValues {
		/Request				1		# measured with RequestTimer() macro
		/Method {						# measured with MethodTimer() macro
			/Page {
				/Render			1
			}
			/DataCarer {
				/GetTimeSeries	1
				/IntGetTimeSeries	1
			}
			/DirFileListAction {
				/DoExecAction	1
			}
		}
		/DataAccess {					# measured with DAAccessTimer() macro
			/DataAccess {
				/StdExec		0
				/Exec			0
			}
			/ResultMapper {
				/Put			0
			}
			/ParameterMapper {
				/Get			0
			}
			/SlotnameOutputMapper {
				/DoPutAny		0
			}
			/StreamToAnythingMapper {
				/DoPutStream	0
			}
		}
	}

######## Test specific section ########

	/RunOnly {
	}
	/TestCases {
		/DirFileListActionTest01 {
			/Env {
				/TimeLoggingAction	%TimeLoggingAction
				/EnabledValues		%EnabledValues
			}
			/TheAction {
				/DirFileListAction {
					/Path	{
						"."
					}
					/Filter ""
					/Sort	""
				}
			}
			/ExpectedResult 1
			/Result {
				/TmpStore {
					/RetrievedFileList	ignore
				}
			}
		}
		/DirFileListActionTest02 {
			/Env {
				/TimeLoggingAction	%TimeLoggingAction
				/EnabledValues		%EnabledValues
			}
			/TheAction {
				/DirFileListAction {
					/Path	{
						"/"
						"home"
					}
					/Filter ""
				}
			}
			/ExpectedResult 1
			/Result {
				/TmpStore {
					/RetrievedFileList	ignore
				}
			}
		}
		/DirFileListActionTest03 {
			/Env {
				/TimeLoggingAction	%TimeLoggingAction
				/EnabledValues		%EnabledValues
			}
			/TheAction {
				/DirFileListAction {
					/Path	{
						"."
					}
					/Filter "cpp"
				}
			}
			/ExpectedResult 1
			/Result {
				/TmpStore {
					/RetrievedFileList	ignore
				}
			}
		}
		/DirFileListActionTest04 {
			/Env {
				/TimeLoggingAction	%TimeLoggingAction
				/EnabledValues		%EnabledValues
			}
			/TheAction {
				/DirFileListAction {
					/Path	{
						"."
					}
					/Filter "cpp"
					/Target "MyTargetSlot"
				}
			}
			/ExpectedResult 1
			/Result {
				/TmpStore {
					/MyTargetSlot	ignore
				}
			}
		}
		/DirFileListActionTest05 {
			/TheAction {
				/DirFileListAction {
					/Path	{
						"/otto//"
					}
					/Target "MyTargetSlot"
				}
			}
			/ExpectedResult 0
			/Result {
				/TmpStore {
					/Error "Slot Path contains not a valid path !"
				}
			}
		}
		/FirstTestName {
			/TmpStore {
			}
			/RoleStore {
			}
			/Query {
				/fields {
					/TheTestField	"qwertz"
				}
			}
			/SessionStore {
				/Fieldname abc
			}
			/TheAction {
				/NotEmptyCheckAction {
					/FieldName	TheTestField
				}
			}

			/ExpectedToken	TheAction
			/ExpectedResult 1

			/Result {
				/TmpStore {
				}
			}
		}
		/SecondTestName {
			/UseConfig FirstTestName
			/Replace {
				/SessionStore.Fieldname {
					123
				}
				/TheAction {
					/NotEmptyCheckAction {
						/FieldName	Fieldname
					}
				}
				/ExpectedResult 0
				/Result {
					/TmpStore {
						/Error	NotEmptyCheckAction
						/ErrorData	Fieldname
					}
				}
			}
		}

		/StringsEqualActionTrueTest {
			/TheAction {
				/StringsEqualAction {
					/String1	"XXX"
					/String2	"XXX"
				}
			}
			/ExpectedResult 1
		}
		/StringsEqualActionFalseTest {
			/TheAction {
				/StringsEqualAction {
					/String1	"XXX"
					/String2	"XxX"
				}
			}
			/ExpectedResult 0
		}

		/AppendListActionAppendTest {
			/TmpStore {
				/Testlist  {
					/0	"A"
					/1	"B"
					/2	"C"
					/3	"D"
				}
			}
			/TheAction {
				/AppendListAction {
					/Destination {
						/Slot NewList
					}
					/CopyList {
						/Testlist	CpTestlist
					}
				}
			}
			/ExpectedResult 1
			/Result {
				/TmpStore {
					/NewList  {
						/CpTestlist {
							/0	"A"
							/1	"B"
							/2	"C"
							/3	"D"
						}
					}
				}
			}
		}
		/AppendListActionAppendExistingSlotTest {
			/TmpStore {
				/Testlist  {
					/0	"E"
					/1	"F"
					/2	"G"
					/3	"H"
				}
				/NewList  {
					/CpTestlist {
						/0	"A"
						/1	"B"
						/2	"C"
						/3	"D"
					}
				}
			}
			/TheAction {
				/AppendListAction {
					/Destination {
						/Slot NewList
					}
					/CopyList {
						/Testlist	CpTestlist
					}
				}
			}
			/ExpectedResult 1
			/Result {
				/TmpStore {
					/NewList  {
						/CpTestlist {
							/0	"A"
							/1	"B"
							/2	"C"
							/3	"D"
							/4	"E"
							/5	"F"
							/6	"G"
							/7	"H"
						}
					}
				}
			}
		}
		/CreateAnythingFromStringActionTest {
			/TheAction {
				 /CreateAnythingFromStringAction {
					/Destination {
						/Slot 	NewTestlist
					}
					/String		"{ gugus /abc 3 { 123 } }"
				 }
			}
			/ExpectedResult 1
			/Result {
				/TmpStore {
					/NewTestlist {
						gugus
						/abc	3
						{ 123 }
					}
				}
			}
		}
		/CreateAnythingFromStringActionDestFailTest {
			/TheAction {
				 /CreateAnythingFromStringAction {
					/Destination {
						/Slot 	NewTestlist
					}
					/XString		"{ gugus /abc 3 { 123 } }"
				 }
			}
			/ExpectedResult 0
		}
		/CreateAnythingFromStringActionStringFailTest {
			/TheAction {
				 /CreateAnythingFromStringAction {
					/Slot 	NewTestlist
					/String		"{ gugus /abc 3 { 123 } }"
				 }
			}
			/ExpectedResult 0
		}
		/AnythingNotNullActionSimpleTrueTest {
			/TmpStore {
				/Testslot  {
					abc
				}
			}
			/TheAction {
				/AnythingNotNullAction {
					/Slot	Testslot
				}
			}
		}
		/AnythingNotNullActionSimpleFalseTest {
			/TmpStore {
				/Testslot *
			}
			/TheAction {
				/AnythingNotNullAction {
					/Slot	Testslot
				}
			}
			/ExpectedResult	0
		}
		/AnythingNotNullActionNoSlotTest {
			/TheAction {
				/AnythingNotNullAction {
					/Slot	Testslot
				}
			}
			/ExpectedResult	0
		}
		/AnythingNotNullActionRoleStoreTrueTest {
			/RoleStore {
				/Testslot  {
					abc
				}
			}
			/TheAction {
				/AnythingNotNullAction {
					/Store	Role
					/Slot	Testslot
				}
			}
		}
		/AnythingNotNullActionRenderedTrueTest {
			/TmpStore {
				/Testslot  {
					/abc {}
				}
			}
			/TheAction {
				/AnythingNotNullAction {
					/Slot {
						Testslot
						"."
						abc
					}
				}
			}
		}
		/CreateAnythingFromStringActionSecondTest {
			/TheAction {
				/CreateAnythingFromStringAction {
					/Destination {
						/Store	Role
						/Slot	ResultSlot
					}
					/String		"{ /Slot1 \"data1\" /Slot2 1234 { /sub1 \"datasub1\" } }"
				}
			}
			/Result {
				/RoleStore {
					/ResultSlot {
						/Slot1 "data1"
						/Slot2 1234
						{
							/sub1 "datasub1"
						}
					}
				}
			}
		}
		/CreateAnythingFromStringActionTestUseTempStore {
			/TheAction {
				/CreateAnythingFromStringAction {
					/Destination {
						/Slot	ResultSlot
					}
					/String		"{ /Slot1 \"data1\" /Slot2 1234 { /sub1 \"datasub1\" } }"
				}
			}
			/Result {
				/TmpStore {
					/ResultSlot {
						/Slot1 "data1"
						/Slot2 1234
						{
							/sub1 "datasub1"
						}
					}
				}
			}
		}
		/CreateAnythingFromStringActionTestNested {
			/TheAction {
				/CreateAnythingFromStringAction {
					/Destination {
						/Slot	Result.Slot
					}
					/String		"{ /Slot1 \"data1\" /Slot2 1234 { /sub1 \"datasub1\" } }"
				}
			}
			/Result {
				/TmpStore {
					/Result {
						/Slot {
							/Slot1 "data1"
							/Slot2 1234
							{
								/sub1 "datasub1"
							}
						}
					}
				}
			}
		}
		/CreateAnythingFromStringActionTestLookupString {
			/TmpStore {
				/MyText	"{ /Slot1 \"data1\" /Slot2 1234 { /sub1 \"datasub1\" } }"
			}
			/TheAction {
				/CreateAnythingFromStringAction {
					/Destination {
						/Slot	ResultSlot
					}
					/String		{ /Lookup MyText }
				}
			}
			/Result {
				/TmpStore {
					/ResultSlot {
						/Slot1 "data1"
						/Slot2 1234
						{
							/sub1 "datasub1"
						}
					}
				}
			}
		}
		/BuildAnyFromSeparatedListActionRecSepTest {
			/TmpStore {
				/MyText	"1234;abcde;fghik;\r\n5678;lmnop;qrstuv;"
			}
			/TheAction {
				/BuildAnyFromSeparatedListAction {
					/Destination {
						/Slot	ResultSlot
					}
					/Text	          { /Lookup MyText }
					/RecordSeparator  "\r\n"
				}
			}
			/Result {
				/TmpStore {
					/ResultSlot {
						"1234;abcde;fghik;"
						"5678;lmnop;qrstuv;"
					}
				}
			}
		}
		/BuildAnyFromSeparatedListActionRecSepNumberedTest {
			/TmpStore {
				/MyText	"1234;abcde;fghik;\r\n5678;lmnop;qrstuv;"
			}
			/TheAction {
				/BuildAnyFromSeparatedListAction {
					/Destination {
						/Slot	ResultSlot
					}
					/Text	          { /Lookup MyText }
					/RecordSeparator  "\r\n"
					/useSlotName		1
				}
			}
			/Result {
				/TmpStore {
					/ResultSlot {
						/0	"1234;abcde;fghik;"
						/1	"5678;lmnop;qrstuv;"
					}
				}
			}
		}
		/BuildAnyFromSeparatedListActionRecAndFieldSepTest {
			/TmpStore {
				/MyText	"1234;abcde;fghik\r\n5678;lmnop;qrstuv"
			}
			/TheAction {
				/BuildAnyFromSeparatedListAction {
					/Destination {
						/Slot	ResultSlot
					}
					/Text	          { /Lookup MyText }
					/RecordSeparator  "\r\n"
					/FieldSeparator	  ";"
				}
			}
			/Result {
				/TmpStore {
					/ResultSlot {
						{
							"1234"
							"abcde"
							"fghik"
						}
						{
							"5678"
							"lmnop"
							"qrstuv"
						}
					}
				}
			}
		}
		/BuildAnyFromSeparatedListActionRecAndFieldSepNumberedTest {
			/TmpStore {
				/MyText	"1234;abcde;fghik\r\n5678;lmnop;qrstuv"
			}
			/TheAction {
				/BuildAnyFromSeparatedListAction {
					/Destination {
						/Store	Role
						/Slot	ResultSlot
					}
					/Text	          { /Lookup MyText }
					/RecordSeparator  "\r\n"
					/FieldSeparator	  ";"
					/useSlotName		1
				}
			}
			/Result {
				/RoleStore {
					/ResultSlot {
						/"0"  {
							/0	"1234"
							/1	"abcde"
							/2	"fghik"
						}
						/"1"  {
							/0	"5678"
							/1	"lmnop"
							/2	"qrstuv"
						}
					}
				}
			}
		}
		/BuildAnyFromSeparatedListActionHeaderRowTest {
			/TmpStore {
				/MyText	"row1;row2;row3\r\nr1z2;r2z2;r3z2\r\n1234;abcde;fghik\r\n5678;lmnop;qrstuv"
			}
			/TheAction {
				/BuildAnyFromSeparatedListAction {
					/Destination {
						/Store	Role
						/Slot	ResultSlot
					}
					/Text	          { /Lookup MyText }
					/RecordSeparator  "\r\n"
					/FieldSeparator	  ";"
					/useSlotName		1
					/NumberOfHeaderRows 2
					/HeaderSeparator	"_"
				}
			}
			/Result {
				/RoleStore {
					/ResultSlot {
						/"0"  {
							/row1_r1z2	"1234"
							/row2_r2z2	"abcde"
							/row3_r3z2	"fghik"
						}
						/"1"  {
							/row1_r1z2	"5678"
							/row2_r2z2	"lmnop"
							/row3_r3z2	"qrstuv"
						}
					}
				}
			}
		}
		/BuildAnyFromSeparatedListActionHeaderSepTest {
			/TmpStore {
				/MyText	"row1;row2;row3\r\nr1z2;r2z2;r3z2\r\n1234;abcde;fghik\r\n5678;lmnop;qrstuv"
			}
			/TheAction {
				/BuildAnyFromSeparatedListAction {
					/Destination {
						/Store	Role
						/Slot	ResultSlot
					}
					/Text	          { /Lookup MyText }
					/RecordSeparator  "\r\n"
					/FieldSeparator	  ";"
					/useSlotName		1
					/NumberOfHeaderRows 2
				}
			}
			/Result {
				/RoleStore {
					/ResultSlot {
						/"0"  {
							/row1r1z2	"1234"
							/row2r2z2	"abcde"
							/row3r3z2	"fghik"
						}
						/"1"  {
							/row1r1z2	"5678"
							/row2r2z2	"lmnop"
							/row3r3z2	"qrstuv"
						}
					}
				}
			}
		}
		/BuildAnyFromSeparatedListActionHeaderNoSlotTest {
			/TmpStore {
				/MyText	"row1;row2;row3\r\nr1z2;r2z2;r3z2\r\n1234;abcde;fghik\r\n5678;lmnop;qrstuv"
			}
			/TheAction {
				/BuildAnyFromSeparatedListAction {
					/Destination {
						/Store	Role
						/Slot	ResultSlot
					}
					/Text	          { /Lookup MyText }
					/RecordSeparator  "\r\n"
					/FieldSeparator	  ";"
					/useSlotName		0
					/NumberOfHeaderRows 2
					/HeaderSeparator	"_"
				}
			}
			/Result {
				/RoleStore {
					/ResultSlot {
						{
							"1234"
							"abcde"
							"fghik"
						}
						{
							"5678"
							"lmnop"
							"qrstuv"
						}
					}
				}
			}
		}
	}
}
