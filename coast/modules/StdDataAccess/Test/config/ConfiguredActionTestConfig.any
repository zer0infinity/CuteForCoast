#-----------------------------------------------------------------------------------------------------
# Copyright (c) 2005, Peter Sommerlad and IFS Institute for Software at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or modify it under the terms of
# the license that is included with this library/application in the file license.txt.
#-----------------------------------------------------------------------------------------------------
{
	/DLL {
		CoastRenderers
	}
	/Modules {
		DataAccessImplsModule
		ActionsModule
		MappersModule
		RenderersModule
	}

	/Actions {
		/CallDataAccessAction		{ CallDA }
	}
	/Renderers {
		/SwitchRenderer 		{ Switch }
		/ContextLookupRenderer 	{ Lookup }
	}
	/DataAccessImpls {
		/MailDAImpl {
			TestMail
		}
		/CgiCaller {
			CgiExecTest
		}
		/MapperTestDAImpl {
			/HeaderSuppressMapper {
				HeaderSuppressMapperHierarch
			}
		}
	}

	/Mappers {
		/Input {
			/ParameterMapper {
				TestMail
				HeaderSuppressMapper
				HeaderSuppressMapperHierarch
			}
			/HTTPHeaderParameterMapper {
				/MyHeaderSuppressMapper {
					HierarchHeaderSuppressMapper
				}
			}
			/CgiParams { CgiExecTest }
		}
		/Output {
			/ResultMapper {
				TestMail
				ExecTestOut
				CgiExecTest
				HeaderSuppressMapper
				HeaderSuppressMapperHierarch
			}
		}
	}

######## Test specific section ########

	/RunOnly {
	}

	/TestCases {
	  /OkCase {
		/TmpStore {
		  /REQUEST_URI "/testcgi.sh"
		  /DocumentRoot "config"
		  /QUERY_STRING "foo=bar"
		}
		/TheAction {
		  /CallDA  CgiExecTest
		}
		/Result {
		  /TmpStore {
			/Mapper.ResponseCode 200
			/Mapper.ResponseMsg Ok
			/Mapper.HTTPBody "Content-type: text/plain\n\nhello_world\nQuery: foo=bar\ngenerated by: testcgi.sh\n"
		  }
		}
	  }
	  /Ok2Case {
		/UseConfig OkCase
		/Replace {
		  /TmpStore.REQUEST_URI "/config/testcgi.sh"
		  /TmpStore.DocumentRoot ""
		}
	  }
	  /"OkCase: Shell script output beginnt nicht mit Content-Type etc" { # apache would deliver 500 Internal Server Error
		/UseConfig "OkCase"
		/Replace {
		  /TmpStore.REQUEST_URI "/testIllegalOutput.sh"
		  /Result.TmpStore:2 "Just something\n"
		}
	  }
	  /FailureNotFound {
		/TmpStore {
		  /REQUEST_URI "/testcgix.sh"
		  /DocumentRoot "config"
		  /QUERY_STRING "foo=bar"
		}
		/TheAction {
		  /CallDA  CgiExecTest
		}
		/ExpectedResult 0
		/Result {
		  /TmpStore {
			/Mapper.ResponseCode 404
			/Mapper.ResponseMsg "Not Found"
			/Mapper.HTTPBody "<html><head>\n<title>404 Not Found</title>\n</head><body>\n<h1>Not Found</h1>\n<p>The requested URL <b>/testcgix.sh</b> is invalid.</p>\n<hr />\n<address>Coast 2.0 Server</address>\n</body></html>\n"
		  }
		}
	  }
	  /"Failure: Shell script stuertzt ab" {
		/UseConfig OkCase
		/Replace {
		  /TmpStore.REQUEST_URI "/testCrash.sh"
		}
	  }
	  /FailureBadRequest { # Eigentlich sollte dies 404 Not Found liefern
		/UseConfig FailureNotFound
		/Replace {
		  /TmpStore.REQUEST_URI "testcgi.sh"
		  /Result.TmpStore:2 "<html><head>\n<title>404 Not Found</title>\n</head><body>\n<h1>Not Found</h1>\n<p>The requested URL <b>testcgi.sh</b> is invalid.</p>\n<hr />\n<address>Coast 2.0 Server</address>\n</body></html>\n"
		}
	  }
	  /"Failure: empty uri string"{ # Eigentlich sollte dies 400 Bad Request liefern
		/UseConfig FailureNotFound
		/Replace {
		  /TmpStore.REQUEST_URI ""
		  /Result.TmpStore {
			/Mapper.ResponseCode 400
			/Mapper.ResponseMsg "Bad Request"
			/Mapper.HTTPBody "<html><head>\n<title>400 Bad Request</title>\n</head><body>\n<h1>Bad Request</h1>\n<p>The requested URL <b></b> is invalid.</p>\n<hr />\n<address>Coast 2.0 Server</address>\n</body></html>\n"
		  }
		}
	  }
	  /FailureNotAllowed { # Eigentlich sollte dies 404 Not Found liefern
		/UseConfig FailureNotFound
		/Replace {
		  /TmpStore.REQUEST_URI "../../../../../../../../../../../../../../../../../../../bin/netstat"
		  /Result.TmpStore:2 "<html><head>\n<title>404 Not Found</title>\n</head><body>\n<h1>Not Found</h1>\n<p>The requested URL <b>../../../../../../../../../../../../../../../../../../../bin/netstat</b> is invalid.</p>\n<hr />\n<address>Coast 2.0 Server</address>\n</body></html>\n"
		}
	  }
		/HeaderSuppressMapperTest {
			/TmpStore {
				/Header {
	                /HOST "sso.badgeportal:9090"
	                /USER-AGENT "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100629 Ubuntu/10.10 (maverick) Firefox/3.6.6 GTB7.0"
	                /ACCEPT {
	                  "text/html"
	                  "application/xhtml+xml"
	                  "application/xml;q=0.9"
	                  "*/*;q=0.8"
	                }
	                /ACCEPT-LANGUAGE {
	                  "en-us"
	                  "en;q=0.5"
	                }
	                /ACCEPT-ENCODING {
	                  "gzip"
	                  "deflate"
	                }
	                /ACCEPT-CHARSET {
	                  "ISO-8859-1"
	                  "utf-8;q=0.7"
	                  "*;q=0.7"
	                }
	                /KEEP-ALIVE "115"
	                /CONNECTION {
	                	"keep-alive"
	                }
				}
			}
			/TheAction {
				/CallDA {
					/DataAccess	HeaderSuppressMapper
					/Parameters {
						/DataType	StringStream
						/transfer {
							/In Out
						}
					}
				}
			}
			/Result {
				/TmpStore {
					/Mapper	{
						/Out "HOST: sso.badgeportal:9090\r\nKEEP-ALIVE: 115\r\nCONNECTION: keep-alive\r\n"
					}
				}
			}
		}
		/HeaderSuppressMapperHierarchTest {
			/TmpStore {
				/Header {
	                /HOST "sso.badgeportal:9090"
	                /USER-AGENT "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.6) Gecko/20100629 Ubuntu/10.10 (maverick) Firefox/3.6.6 GTB7.0"
	                /ACCEPT {
	                  "text/html"
	                  "application/xhtml+xml"
	                  "application/xml;q=0.9"
	                  "*/*;q=0.8"
	                }
	                /ACCEPT-LANGUAGE {
	                  "en-us"
	                  "en;q=0.5"
	                }
	                /ACCEPT-ENCODING {
	                  "gzip"
	                  "deflate"
	                }
	                /ACCEPT-CHARSET {
	                  "ISO-8859-1"
	                  "utf-8;q=0.7"
	                  "*;q=0.7"
	                }
	                /KEEP-ALIVE "115"
	                /CONNECTION {
	                	"keep-alive"
	                }
				}
			}
			/TheAction {
				/CallDA {
					/DataAccess	HeaderSuppressMapperHierarch
					/Parameters {
						/DataType	StringStream
						/transfer {
							/In Out
						}
					}
				}
			}
			/Result {
				/TmpStore {
					/Mapper	{
						/Out "HOST: sso.badgeportal:9090\r\nCONNECTION: keep-alive\r\n"
					}
				}
			}
		}
	}
}
